<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    
    <!-- Root Context: defines shared resources visible to all other web components -->
        <!-- db 정보를 담고있는 객체 -->
        <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://project-db-stu.ddns.net:3307/sonsu"></property>
        <property name="username" value="sonsu"></property>
        <property name="password" value="12345"></property>
        </bean>
        
        <!-- 커넥션 풀 생성을 도울 객체 생성 -->
        <!-- Connection들을 가지고 있는 DBCP -->
        <!--HikariCP Configration-->
        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
        </bean>
        
        
        <!-- dataSource 필드에 집어넣겠다. -->
        <!-- 커넥션과 Mapper 객체들을 관리할 sqlSessionFactory 객체 생성 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        </bean>
        
        <!--  interface를 완전한 객체로 만들어줌-->
        <mybatis-spring:scan base-package="com.smhrd.mapper"/>
        
</beans>

<!-- 
bean : java 객체 ( 스프링이 생성, 삭제를 관리하는 객체)
IOC(Inversion of Control, 제어역전) : 사람이 객체를 만들고 사용하는게 아니라, 스프링이 알아서 만들고 연결
-->